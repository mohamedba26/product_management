// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using chaabene.Models;

#nullable disable

namespace chaabene.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20230901215859_Initial Migration")]
    partial class InitialMigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("chaabene.Models.Archieve", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Archive")
                        .HasColumnType("datetime2");

                    b.Property<int>("offerId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("offerId");

                    b.ToTable("Archieves");
                });

            modelBuilder.Entity("chaabene.Models.Offer", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<int>("OfferDetailId")
                        .HasColumnType("int");

                    b.Property<DateTime>("date")
                        .HasColumnType("datetime2");

                    b.HasKey("id");

                    b.HasIndex("OfferDetailId");

                    b.ToTable("Offers");
                });

            modelBuilder.Entity("chaabene.Models.OfferDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<float>("price")
                        .HasColumnType("real");

                    b.Property<int>("productId")
                        .HasColumnType("int");

                    b.Property<int>("prooductId")
                        .HasColumnType("int");

                    b.Property<float>("quantity")
                        .HasColumnType("real");

                    b.HasKey("Id");

                    b.HasIndex("productId");

                    b.ToTable("OfferDetails");
                });

            modelBuilder.Entity("chaabene.Models.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("subtype")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("chaabene.Models.Archieve", b =>
                {
                    b.HasOne("chaabene.Models.Offer", "offer")
                        .WithMany()
                        .HasForeignKey("offerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("offer");
                });

            modelBuilder.Entity("chaabene.Models.Offer", b =>
                {
                    b.HasOne("chaabene.Models.OfferDetail", "offerDetail")
                        .WithMany()
                        .HasForeignKey("OfferDetailId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("offerDetail");
                });

            modelBuilder.Entity("chaabene.Models.OfferDetail", b =>
                {
                    b.HasOne("chaabene.Models.Product", "product")
                        .WithMany("offerDetails")
                        .HasForeignKey("productId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("product");
                });

            modelBuilder.Entity("chaabene.Models.Product", b =>
                {
                    b.Navigation("offerDetails");
                });
#pragma warning restore 612, 618
        }
    }
}
