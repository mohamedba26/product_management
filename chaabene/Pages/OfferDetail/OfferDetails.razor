@page "/offerdetails"
@using chaabene.Models;
@inject Service.OfferDetail_Service.IOfferDetailService offerDetailService
@inject IJSRuntime jsRuntime
<h3>Offer Details</h3>
<a href="/offerdetail/add" class="btn btn-outline-dark">Add</a>
<div class="row">
    <div class="col-md-6">
        <table class="table">
            <thead>
                <tr>
                    <th>Id</th>
                    <th>Price</th>
                    <th>Quantity</th>
                    <th>Product</th>
                    <th>Action</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var offerDetail in offerDetailList)
                {
                        <tr>
                            <td>@offerDetail.Id</td>
                            <td>@offerDetail.price</td>
                            <td>@offerDetail.quantity</td>
                            <td>@offerDetail.product.Name</td>
                            <td>
                                <a href="/offerdetail/edit/@offerDetail.Id" class="btn btn-success">Edit</a>
                                <a class="btn btn-danger" @onclick="async () => await Delete(offerDetail)">Delete</a>
                            </td>
                        </tr>
                }
            </tbody>
        </table>
    </div>
</div>
@code {
    private List<OfferDetail> offerDetailList = new List<OfferDetail>();
    protected override void OnInitialized()
    {
        offerDetailList = offerDetailService.GetAllOfferDetails();
        base.OnInitialized();
    }
    private async Task Delete(OfferDetail offerDetail)
    {
        bool confirmed = await jsRuntime.InvokeAsync<bool>("confirm", "Are you sure you want to delete this offer detail?");
        if (confirmed)
            if (offerDetailService.DeleteOfferDetail(offerDetail.Id))
                offerDetailList.Remove(offerDetail);
    }
}
